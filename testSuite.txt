((lambda (x y z a) (x (y (z a)))) head tail tail '(a b c))

(define id (lambda (x) x)) (id (head (tail '(a b c))))

(define fact
    (lambda (n)
        (if (zero? n) 1
            (* n (fact (- n 1))))))
            
(define fact (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))) (fact 1)

[
ScmError {errCaller = "evalHeaps", errMessage = "failed in evaluating ObjCons (ScmCons {scmCar = ObjSymbol \"fact\", scmCdr = ObjCons (ScmCons {scmCar = ObjImmediate (ImmInt 1), scmCdr = ObjImmediate (ImmSym \"()\")})})"},
ScmError {errCaller = "scmTimes", errMessage = "argument caused failure: ObjCons (ScmCons {scmCar = ObjSymbol \"fact\", scmCdr = ObjCons (ScmCons {scmCar = ObjCons (ScmCons {scmCar = ObjSymbol \"-\", scmCdr = ObjCons (ScmCons {scmCar = ObjSymbol \"n\", scmCdr = ObjCons (ScmCons {scmCar = ObjImmediate (ImmInt 1), scmCdr = ObjImmediate (ImmSym \"()\")})})}), scmCdr = ObjImmediate (ImmSym \"()\")})})"},
ScmError {errCaller = "eval", errMessage = "bad function "},
ScmError {errCaller = "eval", errMessage = "symbol lookup failed: fact, global env = [(\"quote\",ObjPrimitive (ScmPrimitive {priName = \"quote\", priFunction = <function>})),(\"head\",ObjPrimitive (ScmPrimitive {priName = \"head\", priFunction = <function>})),(\"tail\",ObjPrimitive (ScmPrimitive {priName = \"tail\", priFunction = <function>})),(\"define\",ObjPrimitive (ScmPrimitive {priName = \"define\", priFunction = <function>})),(\"if\",ObjPrimitive (ScmPrimitive {priName = \"if\", priFunction = <function>})),(\"zero?\",ObjPrimitive (ScmPrimitive {priName = \"zero?\", priFunction = <function>})),(\"+\",ObjPrimitive (ScmPrimitive {priName = \"+\", priFunction = <function>})),(\"-\",ObjPrimitive (ScmPrimitive {priName = \"-\", priFunction = <function>})),(\"*\",ObjPrimitive (ScmPrimitive {priName = \"*\", priFunction = <function>}))]"}]
[ScmError {errCaller = "evalHeaps", errMessage = "failed in evaluating ObjCons (ScmCons {scmCar = ObjSymbol \"fact\", scmCdr = ObjCons (ScmCons {scmCar = ObjImmediate (ImmInt 1), scmCdr = ObjImmediate (ImmSym \"()\")})})"},
ScmError {errCaller = "scmTimes", errMessage = "argument caused failure: ObjCons (ScmCons {scmCar = ObjSymbol \"fact\", scmCdr = ObjCons (ScmCons {scmCar = ObjCons (ScmCons {scmCar = ObjSymbol \"-\", scmCdr = ObjCons (ScmCons {scmCar = ObjSymbol \"n\", scmCdr = ObjCons (ScmCons {scmCar = ObjImmediate (ImmInt 1), scmCdr = ObjImmediate (ImmSym \"()\")})})}), scmCdr = ObjImmediate (ImmSym \"()\")})})"},
ScmError {errCaller = "eval", errMessage = "bad function "},
ScmError {errCaller = "eval", errMessage = "symbol lookup failed: fact, global env = 
[(\"quote\",ObjPrimitive (ScmPrimitive {priName = \"quote\", priFunction = <function>}))
,(\"head\",ObjPrimitive (ScmPrimitive {priName = \"head\", priFunction = <function>}))
,(\"tail\",ObjPrimitive (ScmPrimitive {priName = \"tail\", priFunction = <function>})),(\"define\",ObjPrimitive (ScmPrimitive {priName = \"define\", priFunction = <function>})),(\"if\",ObjPrimitive (ScmPrimitive {priName = \"if\", priFunction = <function>})),(\"zero?\",ObjPrimitive (ScmPrimitive {priName = \"zero?\", priFunction = <function>})),(\"+\",ObjPrimitive (ScmPrimitive {priName = \"+\", priFunction = <function>})),(\"-\",ObjPrimitive (ScmPrimitive {priName = \"-\", priFunction = <function>}))
,(\"*\",ObjPrimitive (ScmPrimitive {priName = \"*\", priFunction = <function>}))]"}]


(define foo (lambda (x) (zero? x))) foo (foo 3)

[
ScmError {errCaller = "evalHeaps", errMessage = "failed in evaluating ObjCons (ScmCons {scmCar = ObjSymbol \"foo\", scmCdr = ObjCons (ScmCons {scmCar = ObjImmediate (ImmInt 3), scmCdr = ObjImmediate (ImmSym \"()\")})})"},
ScmError {errCaller = "scmZero", errMessage = "bad argument: Just (ObjSymbol \"x\")"}
]       